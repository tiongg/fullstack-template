{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA,sDAA0F;AAC1F,wCAAwC;AAKjC,IAAM,SAAS,GAAf,MAAM,SAAS;CAAG;AAAZ,SAAS;IAHrB,mBAAM,EAAC;QACN,OAAO,EAAE,CAAC,yCAAkB,CAAC;KAC9B,CAAC;GACW,SAAS,CAAG;AAAZ,8BAAS;;;;;;;ACNtB;;;;;;;;;;ACAA,wCAAwC;AACxC,0DAAoE;AACpE,uDAA8D;AAOvD,IAAM,kBAAkB,GAAxB,MAAM,kBAAkB;CAAG;AAArB,kBAAkB;IAL9B,mBAAM,EAAC;QACN,OAAO,EAAE,EAAE;QACX,WAAW,EAAE,CAAC,iDAAsB,CAAC;QACrC,SAAS,EAAE,CAAC,2CAAmB,CAAC;KACjC,CAAC;GACW,kBAAkB,CAAG;AAArB,gDAAkB;;;;;;;ACT/B;;;;;;;;;;;ACAA,wCAAiD;AACjD,uDAA8D;AAGvD,IAAM,sBAAsB,GAA5B,MAAM,sBAAsB;IACjC,YAA6B,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IAAG,CAAC;IAGzE,SAAS;QACP,OAAO,IAAI,CAAC,mBAAmB,CAAC,eAAe,EAAE,CAAC;IACpD,CAAC;CACF;AAJC;IAAC,gBAAG,EAAC,QAAQ,CAAC;;;;uDAGb;AANU,sBAAsB;IADlC,uBAAU,EAAC,eAAe,CAAC;iEAEwB,2CAAmB,oBAAnB,2CAAmB;GAD1D,sBAAsB,CAOlC;AAPY,wDAAsB;;;;;;;;;;;ACJnC,wCAA4C;AAGrC,IAAM,mBAAmB,GAAzB,MAAM,mBAAmB;IAC9B,gBAAe,CAAC;IAEhB,eAAe;QACb,OAAO;YACL,MAAM,EAAE,QAAQ;SACjB,CAAC;IACJ,CAAC;IAED,UAAU;QACR,OAAO;YACL,OAAO,EAAE,OAAO;SACjB,CAAC;IACJ,CAAC;CACF;AAdY,mBAAmB;IAD/B,uBAAU,GAAE;;GACA,mBAAmB,CAc/B;AAdY,kDAAmB;;;;;;;;ACHhC;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBA,4CAAgD;AAChD,sCAA2C;AAG3C,MAAM,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC;AAEpC,KAAK,UAAU,SAAS;IACtB,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAyB,sBAAS,CAAC,CAAC;IAExE,GAAG,CAAC,UAAU,CAAC;QACb,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;QACnC,OAAO,EAAE,gCAAgC;QACzC,iBAAiB,EAAE,KAAK;QACxB,oBAAoB,EAAE,GAAG;QACzB,WAAW,EAAE,IAAI;KAClB,CAAC,CAAC;IAEH,MAAM,GAAG,CAAC,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC;IACtC,OAAO,GAAG,CAAC;AACb,CAAC;AAEY,WAAG,GAAG,SAAS,EAAE,CAAC","sources":["webpack:///./src/app.module.ts","webpack:///external commonjs \"tslib\"","webpack:///./src/features/server-status/server-status.module.ts","webpack:///external commonjs \"@nestjs/common\"","webpack:///./src/features/server-status/server-status.controller.ts","webpack:///./src/features/server-status/server-status.service.ts","webpack:///external commonjs \"@nestjs/core\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["import { ServerStatusModule } from '@backend/features/server-status/server-status.module';\nimport { Module } from '@nestjs/common';\n\n@Module({\n  imports: [ServerStatusModule],\n})\nexport class AppModule {}\n","module.exports = require(\"tslib\");","import { Module } from '@nestjs/common';\nimport { ServerStatusController } from './server-status.controller';\nimport { ServerStatusService } from './server-status.service';\n\n@Module({\n  imports: [],\n  controllers: [ServerStatusController],\n  providers: [ServerStatusService],\n})\nexport class ServerStatusModule {}\n","module.exports = require(\"@nestjs/common\");","import { Controller, Get } from '@nestjs/common';\nimport { ServerStatusService } from './server-status.service';\n\n@Controller('server-status')\nexport class ServerStatusController {\n  constructor(private readonly serverStatusService: ServerStatusService) {}\n\n  @Get('status')\n  getStatus() {\n    return this.serverStatusService.getServerStatus();\n  }\n}\n","import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ServerStatusService {\n  constructor() {}\n\n  getServerStatus() {\n    return {\n      status: 'Alive!',\n    };\n  }\n\n  getVersion() {\n    return {\n      version: '1.0.0',\n    };\n  }\n}\n","module.exports = require(\"@nestjs/core\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { AppModule } from '@backend/app.module';\nimport { NestFactory } from '@nestjs/core';\nimport { NestExpressApplication } from '@nestjs/platform-express';\n\nconst { SERVER_PORT } = process.env;\n\nasync function bootstrap() {\n  const app = await NestFactory.create<NestExpressApplication>(AppModule);\n\n  app.enableCors({\n    origin: process.env.FRONTEND_DOMAIN,\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204,\n    credentials: true,\n  });\n\n  await app.listen(SERVER_PORT ?? 2000);\n  return app;\n}\n\nexport const app = bootstrap();\n"],"names":[],"sourceRoot":""}